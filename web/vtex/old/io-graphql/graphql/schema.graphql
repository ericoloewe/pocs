# Holds a single review. In the future, this could also include a grade.
#
# NOTE: This is an auto persisted type. That means that VTEX IO will
# automatically generate a CRUD of queries and mutations for handling
# this data and storing it in Masterdata.
type Review @autopersist @cacheControl(maxAge: LONG) {
  # NOTE: Autopersisted types must have an ID
  id: ID!

  # This `@searchable` directive will allow you to fetch all reviews from
  # the same author via the autogenerated `review(author: String)` query.
  author: String @searchable
  comment: Comment
}

type Comment {
  timestamp: Int
  text: String@cacheControl(maxAge: MEDIUM)
}

# NOTE: Since this Query type has been manually defined, it will require
# resolvers with the desired behavior to be manually defined as well. To
# implement the resolvers in Javascript, the `node/graphql/index.ts` file
# should be used. Check the one in this example project for more details.
type Query {
  # The number of people currently viewing the given product's page.
  liveViewers(productId: ID!): Int
}
